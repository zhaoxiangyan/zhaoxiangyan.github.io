(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{460:function(s,e,t){"use strict";t.r(e);var a=t(36),r=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"nodejs库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nodejs库"}},[s._v("#")]),s._v(" nodejs库")]),s._v(" "),t("h2",{attrs:{id:"express"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#express"}},[s._v("#")]),s._v(" Express")]),s._v(" "),t("p",[s._v("快速、无约束、极简的node web框架")]),s._v(" "),t("h2",{attrs:{id:"socket-io"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket-io"}},[s._v("#")]),s._v(" Socket.io")]),s._v(" "),t("p",[s._v("Socket.IO 支持基于事件的实时双向通信。")]),s._v(" "),t("h2",{attrs:{id:"body-parser"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#body-parser"}},[s._v("#")]),s._v(" Body-parser")]),s._v(" "),t("p",[s._v("body-parser是非常常用的一个express中间件，作用是对http请求体进行解析。")]),s._v(" "),t("h2",{attrs:{id:"cors"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cors"}},[s._v("#")]),s._v(" Cors")]),s._v(" "),t("p",[s._v("CORS 是用于提供Connect/Express中间件的node.js程序包，可用于启用具有各种选项的CORS。")]),s._v(" "),t("h2",{attrs:{id:"passport"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#passport"}},[s._v("#")]),s._v(" Passport")]),s._v(" "),t("p",[s._v("Passport.js 是一个简单的、非侵入式的 Node.js 身份验证中间件，它可以集成到任何基于 Express.js 的 web 应用中")]),s._v(" "),t("h2",{attrs:{id:"multer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#multer"}},[s._v("#")]),s._v(" Multer")]),s._v(" "),t("p",[s._v("Multer是一个Node.js中间件，用于处理 multipart/form-data 类型的表单数据，主要用于文件上传。")]),s._v(" "),t("h2",{attrs:{id:"axios"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#axios"}},[s._v("#")]),s._v(" Axios")]),s._v(" "),t("p",[s._v("于 Promise 的 HTTP客 户端，用于浏览器和 node.js")]),s._v(" "),t("h2",{attrs:{id:"morgan"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#morgan"}},[s._v("#")]),s._v(" Morgan")]),s._v(" "),t("p",[s._v("morgan是express默认的日志中间件，也可以脱离express，作为node.js的日志组件单独使用。")]),s._v(" "),t("h2",{attrs:{id:"http-errors"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-errors"}},[s._v("#")]),s._v(" Http-errors")]),s._v(" "),t("p",[s._v("轻松创建 Express，Koa，Connect 等的 HTTP 错误。")]),s._v(" "),t("h2",{attrs:{id:"dotenv"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dotenv"}},[s._v("#")]),s._v(" Dotenv")]),s._v(" "),t("p",[s._v("由于项目不同需求，需要配置不同环境变量，按需加载不同的环境变量文件，使用dotenv，可以完美解决这一问题。")]),s._v(" "),t("p",[s._v("使用dotenv，只需要将程序的环境变量配置写在.env文件中。")]),s._v(" "),t("h2",{attrs:{id:"faker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#faker"}},[s._v("#")]),s._v(" Faker")]),s._v(" "),t("p",[s._v("这是一个很棒的 node 模块，用来 mock 数据。Faker 有自己的 API，而且功能非常丰富，这一切都要归功于发明它的人 Marak 。它几乎可以覆盖到任何你想用的用例，在 Github 上的文档也可以帮你分分钟熟悉它的用法。")]),s._v(" "),t("h2",{attrs:{id:"nodemailer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nodemailer"}},[s._v("#")]),s._v(" Nodemailer")]),s._v(" "),t("p",[s._v("Nodemailer是nodejs中的邮件发送模块。")]),s._v(" "),t("h2",{attrs:{id:"sequelize"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sequelize"}},[s._v("#")]),s._v(" Sequelize")]),s._v(" "),t("p",[s._v("什么是ORM？")]),s._v(" "),t("p",[s._v("简单的讲就是对SQL查询语句的封装，让我们可以用OOP的方式操作数据库，优雅的生成安全、可维护的SQL代码。直观上，是一种Model和SQL的映射关系。")]),s._v(" "),t("p",[s._v("Sequelize 是一款基于Nodejs功能强大的异步ORM框架。")]),s._v(" "),t("p",[s._v("同时支持PostgreSQL, MySQL, SQLite and MSSQL多种数据库，很适合作为Nodejs后端数据库的存储接口，为快速开发Nodejs应用奠定扎实、安全的基础。")]),s._v(" "),t("p",[s._v("既然Nodejs的强项在于异步，没有理由不找一个强大的支持异步的数据库框架，与之配合。")]),s._v(" "),t("h2",{attrs:{id:"mongoose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mongoose"}},[s._v("#")]),s._v(" Mongoose")]),s._v(" "),t("p",[s._v("Mongoose是mongoDB的一个对象模型库,封装了mongoDB对文档的一些增删改查等常用方法,让nodejs操作mongoDB数据库变得更容易。")])])}),[],!1,null,null,null);e.default=r.exports}}]);